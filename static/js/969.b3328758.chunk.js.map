{"version":3,"file":"static/js/969.b3328758.chunk.js","mappings":"8PACA,EAAuB,qBAAvB,EAAmD,qB,kBC8EnD,EAzEe,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA6BT,EAAAA,EAAAA,WAAS,WACpC,IAAMU,EAAOF,EAAaG,IAAI,UAC9B,OAAOD,GAAc,EACtB,IAHD,eAAOE,EAAP,KAAmBC,EAAnB,KASMC,GAAWC,EAAAA,EAAAA,OAQjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQT,EAAaG,IAAI,UAC/B,GAAKM,EAAL,CAIA,IAAMC,EAAW,mCAAG,wGAEhBd,GAAW,GAFK,UAGUe,EAAAA,EAAAA,IAAeF,GAHzB,gBAGRG,EAHQ,EAGRA,QACRlB,GAAS,OAAIkB,IAJG,gDAKPC,EALO,KAKPA,SACTf,EAASe,EAASC,KAAKC,SANP,yBAQhBnB,GAAW,GARK,4EAAH,qDAWjBc,GAbC,CAcF,GAAE,CAACV,IAEJ,IAAMgB,EAAWvB,EAAMwB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACzB,SAAC,KAAD,CACEC,UAAWC,EAEXC,GAAE,UAAKJ,GACPK,MAAO,CAAEC,KAAMlB,GAJjB,UAME,yBACE,0BAAOa,OALJD,EAHkB,IAa3B,OACE,iCACE,kBAAMO,SAzCc,SAAAC,GACtBA,EAAEC,iBACF,IAAQC,EAAgBF,EAAEG,cAAcb,SAAhCY,YACR3B,EAAgB,CAAE6B,OAAQF,EAAYG,OACvC,EAqCG,WACE,kBACEC,SAjDa,SAAAN,GACnBrB,EAAOqB,EAAEG,cAAcE,MACxB,EAgDOA,MAAO3B,EACP6B,YAAY,SACZC,KAAK,OACLC,KAAK,iBAEP,mBAAQD,KAAK,SAAb,uBAEDvC,IAAW,0CACXE,IAAS,uBAAIA,IACbJ,EAAM2C,OAAS,IAAK,eAAIhB,UAAWC,EAAf,SAA6BL,MAGvD,C,sLC1EKqB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALQ,sCASCC,EAAc,mCAAG,sGACLL,EAASlC,IAAI,uBADR,uBACpBW,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdH,EAAc,mCAAG,WAAOF,GAAP,8FAAckC,EAAd,+BAAqB,EAArB,SACLN,EAASlC,IAAI,gBAAiB,CACnDqC,OAAQ,CACN/B,MAAAA,EACAkC,KAAAA,KAJwB,uBACpB7B,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,sDAUd8B,EAAgB,mCAAG,WAAM1B,GAAN,yFACPmB,EAASlC,IAAT,iBAAuBe,IADhB,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhB+B,EAAkB,mCAAG,WAAM3B,GAAN,yFACTmB,EAASlC,IAAT,iBAAuBe,EAAvB,aADS,uBACxBJ,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlBgC,EAAe,mCAAG,WAAM5B,GAAN,yFACNmB,EAASlC,IAAT,iBAAuBe,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/pages/Movies/movies.module.css?e3d2","components/pages/Movies/Movies.jsx","shared/services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movies_list__kHCHK\",\"link\":\"movies_link__+jyyI\"};","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchFilms } from 'shared/services/Api';\nimport styles from './movies.module.css';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchInit, setQue] = useState(() => {\n    const init = searchParams.get('search');\n    return init ? init : '';\n  });\n\n  const handleChange = e => {\n    setQue(e.currentTarget.value);\n  };\n\n  const location = useLocation();\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const { searchMovie } = e.currentTarget.elements;\n    setSearchParams({ search: searchMovie.value });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('search');\n    if (!query) {\n      return;\n    }\n\n    const fetchSearch = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getSearchFilms(query);\n        setItems([...results]);\n      } catch ({ response }) {\n        setError(response.data.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSearch();\n  }, [searchParams]);\n\n  const elements = items.map(({ id, title }) => (\n    <Link\n      className={styles.link}\n      key={id}\n      to={`${id}`}\n      state={{ from: location }}\n    >\n      <li>\n        <span>{title}</span>\n      </li>\n    </Link>\n  ));\n\n  return (\n    <>\n      <form onSubmit={onSubmitHandler}>\n        <input\n          onChange={handleChange}\n          value={searchInit}\n          placeholder=\"search\"\n          type=\"text\"\n          name=\"searchMovie\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <p>...Load Movies</p>}\n      {error && <p>{error}</p>}\n      {items.length > 0 && <ul className={styles.list}>{elements}</ul>}\n    </>\n  );\n};\nexport default Movies;\n\nMovies.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst KEY = '9b564f816e5c77cf73acce6dc1fdd0cf';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: KEY,\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchFilms = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getFullMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieActorsInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","items","setItems","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","init","get","searchInit","setQue","location","useLocation","useEffect","query","fetchSearch","getSearchFilms","results","response","data","message","elements","map","id","title","className","styles","to","state","from","onSubmit","e","preventDefault","searchMovie","currentTarget","search","value","onChange","placeholder","type","name","length","instance","axios","baseURL","params","api_key","getTrendMovies","page","getFullMovieInfo","getMovieActorsInfo","getMovieReviews"],"sourceRoot":""}