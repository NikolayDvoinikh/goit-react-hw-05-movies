{"version":3,"file":"static/js/816.8e5cc0dc.chunk.js","mappings":"+PACA,EAA0B,4BAA1B,EAAmE,+BAAnE,EAA8G,8BAA9G,EAAyJ,+B,SCoBzJ,EAnBkB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC9B,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBACEC,IAAG,yCAAoCL,GACvCG,UAAWC,EACXE,IAAI,gBAEN,gBAAIH,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,0BAAOH,OAET,yBACE,0BAAOC,WAKhB,EC0BD,EAxCiB,WACf,OAA8BK,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,wGAEhBR,GAAW,GAFK,UAIOS,EAAAA,EAAAA,IAAmBJ,GAJ1B,gBAIRK,EAJQ,EAIRA,KACRN,GAAS,OAAIM,IALG,gDAMPC,EANO,KAMPA,SACTT,EAASS,EAASC,KAAKC,SAPP,yBAShBb,GAAW,GATK,4EAAH,qDAYjBQ,GACD,GAAE,CAACH,IAEJ,IAAMS,EAAWX,EAAMY,KACrB,YAAqD,IAAlDC,EAAiD,EAAjDA,cAAeC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,aAC/B,OACE,yBACE,SAAC,EAAD,CAAW5B,IAAK4B,EAAc1B,KAAMwB,EAAWzB,KAAMwB,KAD9CE,EAIZ,IAEH,OACE,gCACGjB,IAAS,uBAAIA,IACbF,IAAW,wCACXI,EAAMiB,OAAS,IAAK,wBAAKN,MAG/B,C,sLCxCKO,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALQ,sCASCC,EAAc,mCAAG,sGACLL,EAASM,IAAI,uBADR,uBACpBf,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdgB,EAAc,mCAAG,WAAOC,GAAP,8FAAcC,EAAd,+BAAqB,EAArB,SACLT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CACNK,MAAAA,EACAC,KAAAA,KAJwB,uBACpBlB,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,sDAUdmB,EAAgB,mCAAG,WAAMb,GAAN,yFACPG,EAASM,IAAT,iBAAuBT,IADhB,uBACtBN,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBH,EAAkB,mCAAG,WAAMS,GAAN,yFACTG,EAASM,IAAT,iBAAuBT,EAAvB,aADS,uBACxBN,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlBoB,EAAe,mCAAG,WAAMd,GAAN,yFACNG,EAASM,IAAT,iBAAuBT,EAAvB,aADM,uBACrBN,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/shared/ActorCard/actor-card.module.css?ef30","shared/ActorCard/ActorCard.jsx","components/pages/CastPage/CastPage.jsx","shared/services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"actor-card_wrapper__hZbIj\",\"actor_info\":\"actor-card_actor_info__5v81y\",\"actor_img\":\"actor-card_actor_img__jjPaW\",\"actor_item\":\"actor-card_actor_item__2N5WE\"};","import styles from './actor-card.module.css';\n\nconst ActorCard = ({ img, name, role }) => {\n  return (\n    <div className={styles.wrapper}>\n      <img\n        src={`https://image.tmdb.org/t/p/w400${img}`}\n        className={styles.actor_img}\n        alt=\"actor foto\"\n      ></img>\n      <ul className={styles.actor_info}>\n        <li className={styles.actor_item}>\n          <span>{name}</span>\n        </li>\n        <li>\n          <span>{role}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\nexport default ActorCard;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieActorsInfo } from 'shared/services/Api';\nimport ActorCard from 'shared/ActorCard/ActorCard';\n\nconst CastPage = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [items, setItems] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      try {\n        setLoading(true);\n\n        const { cast } = await getMovieActorsInfo(movieId);\n        setItems([...cast]);\n      } catch ({ response }) {\n        setError(response.data.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchActors();\n  }, [movieId]);\n\n  const elements = items.map(\n    ({ original_name, character, id, profile_path }) => {\n      return (\n        <li key={id}>\n          <ActorCard img={profile_path} role={character} name={original_name} />\n        </li>\n      );\n    }\n  );\n  return (\n    <>\n      {error && <p>{error}</p>}\n      {loading && <p>Loading Info</p>}\n      {items.length > 0 && <ul>{elements}</ul>}\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst KEY = '9b564f816e5c77cf73acce6dc1fdd0cf';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: KEY,\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchFilms = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getFullMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieActorsInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["img","name","role","className","styles","src","alt","useState","loading","setLoading","error","setError","items","setItems","movieId","useParams","useEffect","fetchActors","getMovieActorsInfo","cast","response","data","message","elements","map","original_name","character","id","profile_path","length","instance","axios","baseURL","params","api_key","getTrendMovies","get","getSearchFilms","query","page","getFullMovieInfo","getMovieReviews"],"sourceRoot":""}