{"version":3,"file":"static/js/969.5310a297.chunk.js","mappings":"8PACA,EAAuB,qBAAvB,EAAmD,qB,kBC+DnD,EA1De,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,OAQjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQL,EAAaM,IAAI,UAC/B,GAAKD,EAAL,CAGA,IAAME,EAAW,mCAAG,wGAEhBX,GAAW,GAFK,UAGUY,EAAAA,EAAAA,IAAeH,GAHzB,gBAGRI,EAHQ,EAGRA,QACRf,GAAS,OAAIe,IAJG,gDAKPC,EALO,KAKPA,SACTZ,EAASY,EAASC,KAAKC,SANP,yBAQhBhB,GAAW,GARK,4EAAH,qDAWjBW,GAZC,CAaF,GAAE,CAACP,IAEJ,IAAMa,EAAWpB,EAAMqB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACzB,SAAC,KAAD,CACEC,UAAWC,EAEXC,GAAE,UAAKJ,GACPK,MAAO,CAAEC,KAAMnB,GAJjB,UAME,yBACE,0BAAOc,OALJD,EAHkB,IAa3B,OACE,iCACE,kBAAMO,SAxCc,SAAAC,GACtBA,EAAEC,iBACF,IAAQC,EAAgBF,EAAEG,cAAcb,SAAhCY,YACRxB,EAAgB,CAAE0B,OAAQF,EAAYG,OACvC,EAoCG,WACE,kBAAOC,YAAY,SAASC,KAAK,OAAOC,KAAK,iBAC7C,mBAAQD,KAAK,SAAb,uBAEDnC,IAAW,0CACXE,IAAS,uBAAIA,IACbJ,EAAMuC,OAAS,IAAK,eAAIf,UAAWC,EAAf,SAA6BL,MAGvD,C,sLC3DKoB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QALQ,sCASCC,EAAc,mCAAG,sGACLL,EAAS3B,IAAI,uBADR,uBACpBK,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdH,EAAc,mCAAG,WAAOH,GAAP,8FAAckC,EAAd,+BAAqB,EAArB,SACLN,EAAS3B,IAAI,gBAAiB,CACnD8B,OAAQ,CACN/B,MAAAA,EACAkC,KAAAA,KAJwB,uBACpB5B,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,sDAUd6B,EAAgB,mCAAG,WAAMzB,GAAN,yFACPkB,EAAS3B,IAAT,iBAAuBS,IADhB,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhB8B,EAAkB,mCAAG,WAAM1B,GAAN,yFACTkB,EAAS3B,IAAT,iBAAuBS,EAAvB,aADS,uBACxBJ,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlB+B,EAAe,mCAAG,WAAM3B,GAAN,yFACNkB,EAAS3B,IAAT,iBAAuBS,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/pages/Movies/movies.module.css?e3d2","components/pages/Movies/Movies.jsx","shared/services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movies_list__kHCHK\",\"link\":\"movies_link__+jyyI\"};","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getSearchFilms } from 'shared/services/Api';\nimport styles from './movies.module.css';\nimport { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    const { searchMovie } = e.currentTarget.elements;\n    setSearchParams({ search: searchMovie.value });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('search');\n    if (!query) {\n      return;\n    }\n    const fetchSearch = async () => {\n      try {\n        setLoading(true);\n        const { results } = await getSearchFilms(query);\n        setItems([...results]);\n      } catch ({ response }) {\n        setError(response.data.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSearch();\n  }, [searchParams]);\n\n  const elements = items.map(({ id, title }) => (\n    <Link\n      className={styles.link}\n      key={id}\n      to={`${id}`}\n      state={{ from: location }}\n    >\n      <li>\n        <span>{title}</span>\n      </li>\n    </Link>\n  ));\n\n  return (\n    <>\n      <form onSubmit={onSubmitHandler}>\n        <input placeholder=\"search\" type=\"text\" name=\"searchMovie\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <p>...Load Movies</p>}\n      {error && <p>{error}</p>}\n      {items.length > 0 && <ul className={styles.list}>{elements}</ul>}\n    </>\n  );\n};\nexport default Movies;\n\n// Movies.propTypes = {\n//   items: PropTypes.array,\n// };\n","import axios from 'axios';\n\nconst KEY = '9b564f816e5c77cf73acce6dc1fdd0cf';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: KEY,\n  },\n});\n\nexport const getTrendMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchFilms = async (query, page = 1) => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query,\n      page,\n    },\n  });\n  return data;\n};\n\nexport const getFullMovieInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieActorsInfo = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","items","setItems","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","query","get","fetchSearch","getSearchFilms","results","response","data","message","elements","map","id","title","className","styles","to","state","from","onSubmit","e","preventDefault","searchMovie","currentTarget","search","value","placeholder","type","name","length","instance","axios","baseURL","params","api_key","getTrendMovies","page","getFullMovieInfo","getMovieActorsInfo","getMovieReviews"],"sourceRoot":""}